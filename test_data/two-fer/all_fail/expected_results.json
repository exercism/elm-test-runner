{
  "version": 3,
  "status": "fail",
  "tests": [
    {
      "name": "No name given",
      "task_id": null,
      "status": "fail",
      "message": "\n     ▼▼▼ ▼▼      ▼▼    ▼ \n    \"No name for anyone!\"\n    ╷\n    │ Expect.equal\n    ╵\n    \"One for you, one for me.\"\n     ▲         ▲▲▲▲  ▲▲▲▲▲▲▲▲ \n\n",
      "output": null,
      "test_code": "Expect.equal \"One for you, one for me.\" (twoFer Nothing)"
    },
    {
      "name": "A name given",
      "task_id": null,
      "status": "fail",
      "message": "\n     ▼▼▼ ▼▼      ▼▼▼   ▼ \n    \"No name for anyone!\"\n    ╷\n    │ Expect.equal\n    ╵\n    \"One for Alice, one for me.\"\n     ▲       ▲▲▲▲▲▲▲   ▲▲▲▲▲▲▲▲ \n\n",
      "output": null,
      "test_code": "Expect.equal \"One for Alice, one for me.\" (twoFer (Just \"Alice\"))"
    },
    {
      "name": "Another name given",
      "task_id": null,
      "status": "fail",
      "message": "\n     ▼▼▼ ▼▼      ▼▼▼   ▼ \n    \"No name for anyone!\"\n    ╷\n    │ Expect.equal\n    ╵\n    \"One for Bob, one for me.\"\n     ▲       ▲ ▲▲▲▲  ▲▲▲▲▲▲▲▲ \n\n",
      "output": null,
      "test_code": "Expect.equal \"One for Bob, one for me.\" (twoFer (Just \"Bob\"))"
    }
  ]
}
